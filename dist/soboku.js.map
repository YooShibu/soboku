{"version":3,"file":"soboku.js","sources":["../src/util.ts","../src/reporter/reporter.ts","../src/state/state.ts","../src/reporter/gate.ts","../src/state/sarray.ts","../src/calc/calc.ts","../src/calc/combine.ts","../src/calc/dependency.ts","../src/calc/trigger.ts","../src/calc/publisher.ts","../src/obsevable/observable.ts","../src/obsevable/timer.ts","../src/obsevable/sequenceEqual.ts"],"sourcesContent":["import { IStateHolder } from \"../index.d\";\r\nimport { Depends } from \"./calc/calc\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter/reporter\";\r\n\r\n\r\nexport function optimizeCB<T>(func: (...args: any[]) => T): (args: any[]) => T {\r\n    switch (func.length) {\r\n        case 1:\r\n            return (args: any[]) => func(args[0])\r\n        case 2:\r\n            return (args: any[]) => func(args[0], args[1]);\r\n        case 3:\r\n            return (args: any[]) => func(args[0], args[1], args[2]);\r\n        case 4:\r\n            return (args: any[]) => func(args[0], args[1], args[2], args[3]);\r\n        default:\r\n            return (args: any[]) => func.apply(undefined, args);\r\n    }\r\n}\r\n\r\nexport function has(obj: object, key: string): boolean {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport function unique<T>(arr: T[]): T[] {\r\n    const result: T[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        const val = arr[i];\r\n        if (indexOf(result, val) === -1) {\r\n            result.push(val);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function identity<T>(x: T): T {\r\n    return x;\r\n}\r\n\r\nexport function indexOf<T>(arr: T[], val: T): number {\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        if (arr[i] === val) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function spliceOne<T>(arr: T[], index: number): void {\r\n    if (0 > index) {\r\n        return;\r\n    }\r\n    for (let i = index, j = index + 1; arr.length > j; ++i, ++j) {\r\n        arr[i] = arr[j];\r\n    }\r\n    arr.pop();\r\n}\r\n\r\nexport function map<T, U>(arr: T[], iteratee: (val: T) => U): U[] {\r\n    const result: U[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        result.push(iteratee(arr[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapObj<T extends { [key: string]: any }, U extends { [key: string]: any }>(obj: T, iteratee: <K1 extends keyof T, K2 extends keyof U>(val: T[K1]) => U[K2]): U {\r\n    const result: { [key: string]: any } = {};\r\n    for (let key in obj) {\r\n        result[key] = iteratee(obj[key]);\r\n    }\r\n    return result as U;\r\n}\r\n\r\nexport function isSobokuReporter(x: any): x is SobokuReporterClass<any> {\r\n    return typeof x === \"object\" && x instanceof SobokuReporterClass;\r\n}\r\n\r\nexport function isStateHolder(x: any): x is IStateHolder<any> {\r\n    return typeof x === \"object\"  && typeof x.s === \"function\";\r\n}\r\n\r\nexport function isDepends(x: any): x is Depends {\r\n    return isSobokuReporter(x) && has(x, \"depends\");\r\n}\r\n","import { Listener, IReporter, IUnsubscriber, Reporter } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass UnListenerClass<T> implements IUnsubscriber {\r\n    private listeners: SobokuListenerClass<any>[] | null;\r\n    private listener: SobokuListenerClass<T> | null;\r\n    \r\n    constructor(listeners: SobokuListenerClass<any>[], listener: SobokuListenerClass<T>) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n    }\r\n\r\n    public unsubscribe() {\r\n        const listeners = this.listeners;\r\n        if (listeners === null) {\r\n            return;\r\n        }\r\n        const i = u.indexOf(listeners, this.listener);\r\n        u.spliceOne(listeners, i);\r\n        this.listeners = null;\r\n        this.listener = null;\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuListenerClass<T> {\r\n\r\n    constructor(private readonly listener: Listener<T>, private readonly thisArg?: any) {\r\n        if (typeof listener !== \"function\") {\r\n            throw new TypeError(\"'listener' must be a function\");\r\n        }\r\n    }\r\n\r\n    public gets(news: T) {\r\n        this.listener.call(this.thisArg, news);\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuReporterClass<T> implements IReporter<T> {\r\n    private readonly listeners: SobokuListenerClass<T>[] = [];\r\n\r\n    public next(val: T): T {\r\n        const listeners = this.listeners;\r\n        for (let i = 0; listeners.length > i; ++i)\r\n            listeners[i].gets(val);\r\n        return val;\r\n    }\r\n\r\n    public report(listener: Listener<T>, thisArg?: any): IUnsubscriber {\r\n        const _listener = new SobokuListenerClass(listener, thisArg);\r\n        this.listeners.push(_listener);\r\n        return new UnListenerClass(this.listeners, _listener);\r\n    }\r\n\r\n    public listenerCount(): number {\r\n        return this.listeners.length;\r\n    }\r\n\r\n}\r\n\r\nexport function reporter<T>(): Reporter<T> {\r\n    return new SobokuReporterClass();\r\n}\r\n","import { Atom, IProgressable, State, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass StateClass<T> extends SobokuReporterClass<T> implements IProgressable<T> {\r\n\r\n    constructor(private state: T) {\r\n        super();\r\n    }\r\n\r\n    public next(val: T): T {\r\n        this.state = val;\r\n        return super.next(val);\r\n    }\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nclass StateHolderClass<T> implements IStateHolder<T> {\r\n\r\n    constructor(private readonly state: T) {}\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nexport function state<T>(initial: T): State<T> {\r\n    return new StateClass(initial);\r\n}\r\n\r\nexport function convAtomToStateHolder<T>(atom: Atom<T>): IStateHolder<T> {\r\n    if (u.isStateHolder(atom)) {\r\n        return atom;\r\n    }\r\n    return new StateHolderClass(atom);\r\n}\r\n","import { IReporter, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"./reporter\";\r\n\r\n\r\nclass GateClass<T> extends SobokuReporterClass<T> {\r\n\r\n    constructor(private readonly gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>) {\r\n        super();\r\n        reporter.report(this.listener, this);\r\n    }\r\n\r\n    private listener(val: T): void {\r\n        if (this.gatekeeper.s()) {\r\n            this.next(val);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function gate<T>(gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>): IReporter<T> {\r\n    return new GateClass(gatekeeper, reporter);\r\n}","import { ISArray } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nclass SobokuArrayClass<T> extends SobokuReporterClass<T[]> implements ISArray<T> {\r\n    private readonly array: T[] = [];\r\n\r\n    constructor(array?: T[]) {\r\n        super();\r\n        this.array = array || [];\r\n    }\r\n        \r\n    public s(): T[] {\r\n        return this.array;\r\n    }\r\n\r\n    public pop(): T | undefined {\r\n        const result = this.array.pop();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public push(): number {\r\n        const i = Array.prototype.push.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return i;\r\n    }\r\n\r\n    public reverse(): T[] {\r\n        this.array.reverse();\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public shift(): T | undefined {\r\n        const result = this.array.shift();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public sort(compareFn?: (a: T, b: T) => number): T[] {\r\n        this.array.sort(compareFn);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n    \r\n    public splice(): T[] {\r\n        Array.prototype.splice.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public unshift(): number {\r\n        const result = Array.prototype.unshift.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function sarray<T>(array?: T[]): ISArray<T> {\r\n    return new SobokuArrayClass<T>(array);\r\n}","import { Atom, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\nexport type Depends = { readonly depends: SobokuReporterClass<any>[] };\r\n\r\nexport function getDeps(atoms: Atom<any>[]): SobokuReporterClass<any>[] {\r\n    let result: SobokuReporterClass<any>[] = [];\r\n    for (let i = 0; atoms.length > i; ++i) {\r\n        const atom = atoms[i];\r\n        if(u.isDepends(atom)) {\r\n            result = result.concat(atom.depends);\r\n        } else if (u.isSobokuReporter(atom)) {\r\n            result.push(atom);\r\n        }\r\n    }\r\n    return u.unique(result);\r\n}\r\n\r\nexport function getState<T>(sh: IStateHolder<T>): T {\r\n    return sh.s();\r\n}\r\n\r\nexport abstract class CalcClass<T> extends SobokuReporterClass<T> {\r\n    private readonly depends: SobokuReporterClass<any>[];\r\n\r\n    constructor(atoms: Atom<any>[]) {\r\n        super();\r\n        const depends = this.depends = getDeps(atoms);\r\n        const listener = this.listener;\r\n        for (let i = 0; depends.length > i; ++i) {\r\n            depends[i].report(listener, this);\r\n        }\r\n    }\r\n\r\n    public abstract s(): T;\r\n    public listener(val: T): void {\r\n        this.next(this.s());\r\n    };\r\n    \r\n}\r\n\r\nexport abstract class CalcFuncClass<T> extends CalcClass<T> {\r\n    private readonly func: (args: any[]) => T;\r\n    private readonly states: IStateHolder<any>[];\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms);\r\n        this.func = u.optimizeCB(func);\r\n        this.states = u.map(atoms, convAtomToStateHolder);\r\n    }\r\n\r\n    public s(): T {\r\n        const args = u.map(this.states, getState);\r\n        return this.func(args);\r\n    }\r\n\r\n}\r\n","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass, getState } from \"./calc\";\r\n\r\n\r\nclass CombineClass<T> extends CalcClass<T> {\r\n    private readonly shObj: { [K in keyof T]: IStateHolder<T[K]> };\r\n\r\n    constructor(atomObj: { [K in keyof T]: Atom<T[K]>}) {\r\n        const atoms: Atom<any>[] = [];\r\n        for (let key in atomObj) {\r\n            atoms.push(atomObj[key]);\r\n        }\r\n        super(atoms);\r\n        this.shObj = u.mapObj(atomObj, convAtomToStateHolder);\r\n    }\r\n\r\n    public s() {\r\n        return u.mapObj<{ [K in keyof T]: IStateHolder<T[K]> }, T>(this.shObj, getState);\r\n    }\r\n    \r\n}\r\n\r\nexport function combine<T>(atomObj: { [K in keyof T]: Atom<T[K]>}): Calc<T> {\r\n    return new CombineClass(atomObj);\r\n}\r\n","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass DependencyClass<T> extends CalcFuncClass<T> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms, func);\r\n    }\r\n\r\n}\r\n\r\nexport function dependency<T>(func: (...args: any[]) => T, ...atoms: Atom<any>[]): Calc<T> {\r\n    return new DependencyClass(atoms, func);\r\n}","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass TriggerClass extends CalcFuncClass<boolean> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => boolean) {\r\n        super(atoms, func);\r\n    }\r\n\r\n    public listener() {\r\n        const s = this.s();\r\n        if (s)\r\n            this.next(s);\r\n    }\r\n\r\n}\r\n\r\nexport function trigger(func: (...args: any[]) => boolean, ...atoms: Atom<any>[]): Calc<boolean> {\r\n    return new TriggerClass(atoms, func);\r\n}","import { Calc, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\n\r\n\r\nclass PublisherClass<T> extends SobokuReporterClass<T> implements IStateHolder<T> {\r\n\r\n    constructor(private readonly permition: Calc<boolean>, private readonly reporter: Calc<T>) {\r\n        super();\r\n        permition.report(this.permitionChanged, this);\r\n        reporter.report(this.publish, this);\r\n    }\r\n\r\n    public s(): T {\r\n        return this.reporter.s();\r\n    }\r\n    \r\n    private publish(val: T) {\r\n        if (this.permition.s())\r\n            this.next(val);\r\n    }\r\n\r\n    private permitionChanged(permition: boolean) {\r\n        if (permition)\r\n            this.next(this.reporter.s());\r\n    }\r\n    \r\n}\r\n\r\nexport function publisher<T>(permition: Calc<boolean>, reporter: Calc<T>): Calc<T> {\r\n    return new PublisherClass(permition, reporter);\r\n}\r\n","import { Reporter, ISObservable } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nexport abstract class SObservable<I extends Reporter<any>, O> implements ISObservable<I, O> {\r\n    public abstract readonly input: I;\r\n    public readonly output = new SobokuReporterClass<O>();\r\n}","import { ISObservable, Atom, Reporter, State, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder, state } from \"../state/state\";\r\nimport { SobokuListenerClass, SobokuReporterClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nabstract class TimerObservable extends SObservable<State<boolean>, number> {\r\n    public readonly input = state(false);\r\n    protected readonly cb = () => this.output.next(Date.now());\r\n    protected readonly ms: IStateHolder<number>;\r\n    protected timer: NodeJS.Timer;\r\n    protected isRunning = false;\r\n\r\n    constructor(ms: Atom<number>) {\r\n        super();\r\n        const _ms = this.ms = convAtomToStateHolder(ms);\r\n        this.input.report(this.fireTimer, this);\r\n        if (u.isSobokuReporter(_ms))\r\n            _ms.report(this.msChanged, this);\r\n    }\r\n\r\n    private msChanged(ms: number) {\r\n        if (this.isRunning) {\r\n            this.fireTimer(false);\r\n            this.fireTimer(true, ms);\r\n        }\r\n    }\r\n\r\n    private fireTimer(trigger: boolean, ms?: number): void {\r\n        this.fire(trigger, ms || this.ms.s());\r\n        this.isRunning = trigger;\r\n    }\r\n\r\n    protected abstract fire(trigger: boolean, ms: number): void;\r\n\r\n}\r\n\r\nclass IntervalObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        if (trigger === false) {\r\n            clearInterval(this.timer);\r\n        } else if (this.isRunning === false) {\r\n            this.timer = setInterval(this.cb, ms);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass TimeoutObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        clearTimeout(this.timer);\r\n        if (trigger) {\r\n            this.timer = setTimeout(this.cb, ms);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function interval(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new IntervalObservable(ms);\r\n}\r\n\r\nexport function timeout(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new TimeoutObservable(ms);\r\n}\r\n","import { Reporter, ISObservable } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nfunction isEqual(x: any, y: any): boolean {\r\n    return x === y;\r\n}\r\n\r\nclass SequenceEqualClass<T> extends SObservable<Reporter<T>, true> {\r\n    public readonly input = new SobokuReporterClass<T>();\r\n    private readonly compare: (x: any, y: any) => boolean;\r\n    private readonly sequence: T[];\r\n    private i = 0;\r\n\r\n    constructor(sequence: T[], compare = isEqual) {\r\n        super();\r\n        this.compare = compare;\r\n        this.sequence = sequence;\r\n        this.input.report(this.checkInput, this);\r\n    }\r\n\r\n    private checkInput(val: T): void {\r\n        const sequence = this.sequence;\r\n        if (this.compare(sequence[this.i], val) === false) {\r\n            this.i = 0;\r\n            return;\r\n        }\r\n        if (++this.i === sequence.length) {\r\n            this.i = 0;\r\n            this.output.next(true);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function sequenceEqual<T>(sequence: T[], compareFunc?: (x: T, y: T) => boolean) {\r\n    return new SequenceEqualClass(sequence, compareFunc);\r\n}"],"names":["u.indexOf","u.spliceOne","u.isStateHolder","reporter","u.isDepends","u.isSobokuReporter","u.unique","u.optimizeCB","u.map","u.mapObj"],"mappings":"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"}