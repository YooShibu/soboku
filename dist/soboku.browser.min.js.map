{"version":3,"file":"soboku.browser.min.js","sources":["../src/util.ts","../src/soboku.ts","../src/calc/calc.ts","../src/reporter.ts","../src/calc/combine.ts","../src/calc/dependency.ts","../src/calc/trigger.ts","../src/obsevable/observable.ts","../src/obsevable/timer.ts"],"sourcesContent":["import { StateHolder, SobokuListener } from \"../index.d\";\r\nimport { Depends } from \"./soboku\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter\";\r\n\r\n\r\nexport function optimizeCB<T>(func: (...args: any[]) => T): (args: any[]) => T {\r\n    switch (func.length) {\r\n        case 1:\r\n            return (args: any[]) => func(args[0])\r\n        case 2:\r\n            return (args: any[]) => func(args[0], args[1]);\r\n        case 3:\r\n            return (args: any[]) => func(args[0], args[1], args[2]);\r\n        case 4:\r\n            return (args: any[]) => func(args[0], args[1], args[2], args[3]);\r\n        default:\r\n            return (args: any[]) => func.apply(undefined, args);\r\n    }\r\n}\r\n\r\nexport function has(obj: object, key: string): boolean {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport function unique<T>(arr: T[]): T[] {\r\n    const result: T[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        const val = arr[i];\r\n        if (indexOf(result, val) === -1) {\r\n            result.push(val);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function identity<T>(x: T): T {\r\n    return x;\r\n}\r\n\r\nexport function indexOf<T>(arr: T[], val: T): number {\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        if (arr[i] === val) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function spliceOne<T>(arr: T[], index: number): void {\r\n    if (0 > index) {\r\n        return;\r\n    }\r\n    for (let i = index, j = index + 1; arr.length > j; ++i, ++j) {\r\n        arr[i] = arr[j];\r\n    }\r\n    arr.pop();\r\n}\r\n\r\nexport function map<T, U>(arr: T[], iteratee: (val: T) => U): U[] {\r\n    const result: U[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        result.push(iteratee(arr[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapObj<T extends { [key: string]: any }, U extends { [key: string]: any }>(obj: T, iteratee: <K1 extends keyof T, K2 extends keyof U>(val: T[K1]) => U[K2]): U {\r\n    const result: { [key: string]: any } = {};\r\n    for (let key in obj) {\r\n        result[key] = iteratee(obj[key]);\r\n    }\r\n    return result as U;\r\n}\r\n\r\nexport function isSobokuEvent(x: any): x is SobokuReporterClass<any> {\r\n    return typeof x === \"object\" && x instanceof SobokuReporterClass;\r\n}\r\n\r\nexport function isStateHolder(x: any): x is StateHolder<any> {\r\n    return typeof x === \"object\"  && typeof x.s === \"function\";\r\n}\r\n\r\nexport function isDepends(x: any): x is Depends {\r\n    return isSobokuEvent(x) && has(x, \"depends\");\r\n}\r\n\r\nexport function isSobokuListener<T>(x: any): x is SobokuListener<T> {\r\n    return x instanceof SobokuListenerClass;\r\n}","import { Atom, Calc, Listener, IReporter, Progressable, Reporter, SobokuArray, SobokuListener, State, StateHolder, UnListener } from \"../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter\";\r\nimport * as u from \"./util\";\r\n\r\nexport type Depends = { readonly depends: SobokuReporterClass<any>[] };\r\n\r\n\r\nclass StateClass<T> extends SobokuReporterClass<T> implements Progressable<T> {\r\n\r\n    constructor(private state: T) {\r\n        super();\r\n    }\r\n\r\n    public next(val: T): T {\r\n        this.state = val;\r\n        return super.next(val);\r\n    }\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nclass StateHolderClass<T> implements StateHolder<T> {\r\n\r\n    constructor(private readonly state: T) {}\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nclass GateClass<T> extends SobokuReporterClass<T> {\r\n\r\n    constructor(private readonly gatekeeper: StateHolder<boolean>, reporter: IReporter<T>) {\r\n        super();\r\n        reporter.report(new SobokuListenerClass(this.listener, this));\r\n    }\r\n\r\n    private listener(val: T): void {\r\n        if (this.gatekeeper.s()) {\r\n            this.next(val);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass SobokuArrayClass<T> extends Array<T> implements SobokuArray<T> {\r\n    public readonly r = new SobokuReporterClass<T[]>();\r\n        \r\n    public s(): T[] {\r\n        return this;\r\n    }\r\n\r\n    public pop(): T | undefined {\r\n        const result = super.pop();\r\n        this.r.next(this);\r\n        return result;\r\n    }\r\n\r\n    public push(): number {\r\n        const i = super.push.apply(this, arguments);\r\n        this.r.next(this);\r\n        return i;\r\n    }\r\n\r\n    public reverse(): this {\r\n        super.reverse();\r\n        this.r.next(this);\r\n        return this;\r\n    }\r\n\r\n    public shift(): T | undefined {\r\n        const result = super.shift();\r\n        this.r.next(this);\r\n        return result;\r\n    }\r\n\r\n    public sort(compareFn?: (a: T, b: T) => number): this {\r\n        super.sort(compareFn);\r\n        this.r.next(this);\r\n        return this;\r\n    }\r\n    \r\n    public splice(): this {\r\n        super.splice.apply(this, arguments);\r\n        this.r.next(this);\r\n        return this;\r\n    }\r\n\r\n    public unshift(): number {\r\n        const result = super.unshift.apply(this, arguments);\r\n        this.r.next(this);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function reporter<T>(): Reporter<T> {\r\n    return new SobokuReporterClass();\r\n}\r\n\r\nexport function state<T>(initial: T): State<T> {\r\n    return new StateClass(initial);\r\n}\r\n\r\nexport function gate<T>(gatekeeper: StateHolder<boolean>, reporter: IReporter<T>): IReporter<T> {\r\n    return new GateClass(gatekeeper, reporter);\r\n}\r\n\r\nexport function sarray<T>(array?: T[]): SobokuArray<T> {\r\n    if (array == undefined)\r\n        return new SobokuArrayClass<T>();\r\n    return new SobokuArrayClass<T>().concat(array) as SobokuArray<T>;\r\n}\r\n\r\nexport function convAtomToStateHolder<T>(atom: Atom<T>): StateHolder<T> {\r\n    if (u.isStateHolder(atom)) {\r\n        return atom;\r\n    }\r\n    return new StateHolderClass(atom);\r\n}\r\n","import { Atom, StateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../soboku\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nfunction getDeps(atoms: Atom<any>[]): SobokuReporterClass<any>[] {\r\n    let result: SobokuReporterClass<any>[] = [];\r\n    for (let i = 0; atoms.length > i; ++i) {\r\n        const atom = atoms[i];\r\n        if(u.isDepends(atom)) {\r\n            result = result.concat(atom.depends);\r\n        } else if (u.isSobokuEvent(atom)) {\r\n            result.push(atom);\r\n        }\r\n    }\r\n    return u.unique(result);\r\n}\r\n\r\nexport function getState<T>(sh: StateHolder<T>): T {\r\n    return sh.s();\r\n}\r\n\r\nexport abstract class CalcClass<T> extends SobokuReporterClass<T> {\r\n    private readonly depends: SobokuReporterClass<any>[];\r\n\r\n    constructor(atoms: Atom<any>[]) {\r\n        super();\r\n        const depends = this.depends = getDeps(atoms);\r\n        const listener = new SobokuListenerClass(this.listener, this);\r\n        for (let i = 0; depends.length > i; ++i) {\r\n            depends[i].report(listener);\r\n        }\r\n    }\r\n\r\n    public abstract s(): T;\r\n    public listener(val: T): void {\r\n        this.next(this.s());\r\n    };\r\n    \r\n}\r\n\r\nexport abstract class CalcFuncClass<T> extends CalcClass<T> {\r\n    private readonly func: (args: any[]) => T;\r\n    private readonly states: StateHolder<any>[];\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms);\r\n        this.func = u.optimizeCB(func);\r\n        this.states = u.map(atoms, convAtomToStateHolder);\r\n    }\r\n\r\n    public s(): T {\r\n        const args = u.map(this.states, getState);\r\n        return this.func(args);\r\n    }\r\n\r\n}\r\n","import { Listener, IReporter, SobokuListener, UnListener } from \"../index.d\";\r\nimport * as u from \"./util\";\r\n\r\n\r\nclass UnListenerClass<T> implements UnListener {\r\n    private listeners: SobokuListener<any>[] | null;\r\n    private listener: SobokuListener<T> | null;\r\n    \r\n    constructor(listeners: SobokuListener<any>[], listener: SobokuListener<T>) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n    }\r\n\r\n    public unlisten() {\r\n        const listeners = this.listeners;\r\n        if (listeners === null) {\r\n            return;\r\n        }\r\n        const i = u.indexOf(listeners, this.listener);\r\n        u.spliceOne(listeners, i);\r\n        this.listeners = null;\r\n        this.listener = null;\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuListenerClass<T> implements SobokuListener<T> {\r\n\r\n    constructor(private readonly listener: Listener<T>, private readonly thisArg?: any) {\r\n        if (typeof listener !== \"function\") {\r\n            throw new TypeError(\"'listener' must be a function\");\r\n        }\r\n    }\r\n\r\n    public gets(news: T) {\r\n        this.listener.call(this.thisArg, news);\r\n    }\r\n    \r\n}\r\n\r\nexport function listener<T>(cb: Listener<T>, thisArg?: any): SobokuListener<T> {\r\n    return new SobokuListenerClass(cb, thisArg);\r\n}\r\n\r\nexport class SobokuReporterClass<T> implements IReporter<T> {\r\n    private readonly listeners: SobokuListener<T>[] = [];\r\n\r\n    public next(val: T): T {\r\n        const listeners = this.listeners;\r\n        for (let i = 0; listeners.length > i; ++i)\r\n            listeners[i].gets(val);\r\n        return val;\r\n    }\r\n\r\n    public report(listener: Listener<T> | SobokuListener<T>): UnListener {\r\n        const _listener = u.isSobokuListener(listener)\r\n            ? listener\r\n            : new SobokuListenerClass(listener);\r\n        this.listeners.push(_listener);\r\n        return new UnListenerClass(this.listeners, _listener);\r\n    }\r\n\r\n    public listenerCount(): number {\r\n        return this.listeners.length;\r\n    }\r\n\r\n}","import { Atom, Calc, StateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../soboku\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass, getState } from \"./calc\";\r\n\r\n\r\nclass CombineClass<T> extends CalcClass<T> {\r\n    private readonly shObj: { [K in keyof T]: StateHolder<T[K]> };\r\n\r\n    constructor(atomObj: { [K in keyof T]: Atom<T[K]>}) {\r\n        const atoms: Atom<any>[] = [];\r\n        for (let key in atomObj) {\r\n            atoms.push(atomObj[key]);\r\n        }\r\n        super(atoms);\r\n        this.shObj = u.mapObj(atomObj, convAtomToStateHolder);\r\n    }\r\n\r\n    public s() {\r\n        return u.mapObj<{ [K in keyof T]: StateHolder<T[K]> }, T>(this.shObj, getState);\r\n    }\r\n    \r\n}\r\n\r\nexport function combine<T>(atomObj: { [K in keyof T]: Atom<T[K]>}): Calc<T> {\r\n    return new CombineClass(atomObj);\r\n}\r\n","import { Atom, Calc, StateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass DependencyClass<T> extends CalcFuncClass<T> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms, func);\r\n    }\r\n\r\n}\r\n\r\nexport function dependency<T>(func: (...args: any[]) => T, ...atoms: Atom<any>[]): Calc<T> {\r\n    return new DependencyClass(atoms, func);\r\n}","import { Atom, Calc, StateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass TriggerClass extends CalcFuncClass<boolean> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => boolean) {\r\n        super(atoms, func);\r\n    }\r\n\r\n    public listener() {\r\n        const s = this.s();\r\n        if (s)\r\n            this.next(s);\r\n    }\r\n\r\n}\r\n\r\nexport function trigger(func: (...args: any[]) => boolean, ...atoms: Atom<any>[]): Calc<boolean> {\r\n    return new TriggerClass(atoms, func);\r\n}","import { Reporter, SObservable, SObservableWithError, IReporter } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter\";\r\n\r\n\r\nexport abstract class ObservableClass<I, O> implements SObservableWithError<I, O> {\r\n    public abstract readonly input: Reporter<I>;\r\n    public abstract readonly output: IReporter<O>;\r\n    public readonly error = new ObservableErrorGate();\r\n}\r\n\r\nexport class ObservableErrorGate extends SobokuReporterClass<Error> {\r\n\r\n    public next(err: Error) {\r\n        if (this.listenerCount() === 0) {\r\n            throw new UnhandledObservableError(err);\r\n        }\r\n        return super.next(err);\r\n    }\r\n    \r\n}\r\n\r\nexport class UnhandledObservableError extends Error {\r\n\r\n    constructor(err: Error) {\r\n        super(`Unhandled observable error: ${err.name}: ${err.message}`);\r\n    }\r\n\r\n    \r\n}\r\nUnhandledObservableError.prototype.name = \"UnhandledObservableError\"","import { SObservable, Atom, Reporter, State, StateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder, reporter, state } from \"../soboku\";\r\nimport { SobokuListenerClass } from \"../reporter\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nabstract class TimerObservable implements SObservable<boolean, number> {\r\n    public readonly input = reporter<boolean>();\r\n    public readonly output = reporter<number>();\r\n    protected readonly cb = () => this.output.next(Date.now());\r\n    protected readonly ms: StateHolder<number>;\r\n    protected timer: NodeJS.Timer;\r\n    protected isEmitting = false;\r\n\r\n    constructor(ms: Atom<number>) {\r\n        const _ms = this.ms = convAtomToStateHolder(ms);\r\n        this.input.report(new SobokuListenerClass(this.fireTimer, this));\r\n        if (u.isSobokuEvent(_ms))\r\n            _ms.report(new SobokuListenerClass(this.msChanged, this));\r\n    }\r\n\r\n    private msChanged(ms: number) {\r\n        if (this.isEmitting) {\r\n            this.fireTimer(false);\r\n            this.fireTimer(true, ms);\r\n        }\r\n    }\r\n\r\n    private fireTimer(trigger: boolean, ms?: number): void {\r\n        this.fire(trigger, ms || this.ms.s());\r\n        this.isEmitting = trigger;\r\n    }\r\n\r\n\r\n    protected abstract fire(trigger: boolean, ms: number): void;\r\n\r\n}\r\n\r\nclass IntervalObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        if (trigger === false) {\r\n            clearInterval(this.timer);\r\n        } else if (this.isEmitting === false) {\r\n            this.timer = setInterval(this.cb, ms);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass TimeoutObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        clearTimeout(this.timer);\r\n        if (trigger) {\r\n            this.timer = setTimeout(this.cb, ms);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function interval(ms: Atom<number>): SObservable<boolean, number> {\r\n    return new IntervalObservable(ms);\r\n}\r\n\r\nexport function timeout(ms: Atom<number>): SObservable<boolean, number> {\r\n    return new TimeoutObservable(ms);\r\n}\r\n"],"names":["func","length","args","apply","undefined","obj","key","Object","prototype","hasOwnProperty","call","arr","result","i","val","indexOf","push","index","j","pop","iteratee","x","SobokuReporterClass","s","isSobokuEvent","has","SobokuListenerClass","atom","u.isStateHolder","StateHolderClass","atoms","u.isDepends","concat","depends","u.isSobokuEvent","u.unique","sh","listeners","listener","this","UnListenerClass","u.spliceOne","u.indexOf","thisArg","TypeError","news","gets","_listener","u.isSobokuListener","state","_super","_this","__extends","StateClass","next","gatekeeper","reporter","report","GateClass","SobokuArrayClass","r","arguments","reverse","shift","compareFn","sort","splice","unshift","Array","getDeps","CalcClass","u.optimizeCB","states","u.map","convAtomToStateHolder","CalcFuncClass","getState","atomObj","shObj","u.mapObj","CombineClass","TriggerClass","ObservableErrorGate","err","listenerCount","UnhandledObservableError","name","message","Error","ms","output","Date","now","_ms","input","fireTimer","msChanged","TimerObservable","isEmitting","trigger","fire","IntervalObservable","clearInterval","timer","setInterval","cb","TimeoutObservable","clearTimeout","setTimeout","array","initial","_i","DependencyClass"],"mappings":"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"}