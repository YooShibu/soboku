{"version":3,"file":"soboku.min.js","sources":["../src/util.ts","../src/state/state.ts","../src/calc/calc.ts","../src/obsevable/sequenceEqual.ts","../src/reporter/reporter.ts","../src/reporter/gate.ts","../src/state/sarray.ts","../src/calc/combine.ts","../src/calc/dependency.ts","../src/calc/trigger.ts","../src/calc/publisher.ts","../src/obsevable/observable.ts","../src/obsevable/timer.ts"],"sourcesContent":["import { IStateHolder } from \"../index.d\";\r\nimport { Depends } from \"./calc/calc\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter/reporter\";\r\n\r\n\r\nexport function optimizeCB<T>(func: (...args: any[]) => T): (args: any[]) => T {\r\n    switch (func.length) {\r\n        case 1:\r\n            return (args: any[]) => func(args[0])\r\n        case 2:\r\n            return (args: any[]) => func(args[0], args[1]);\r\n        case 3:\r\n            return (args: any[]) => func(args[0], args[1], args[2]);\r\n        case 4:\r\n            return (args: any[]) => func(args[0], args[1], args[2], args[3]);\r\n        default:\r\n            return (args: any[]) => func.apply(undefined, args);\r\n    }\r\n}\r\n\r\nexport function has(obj: object, key: string): boolean {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport function unique<T>(arr: T[]): T[] {\r\n    const result: T[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        const val = arr[i];\r\n        if (indexOf(result, val) === -1) {\r\n            result.push(val);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function identity<T>(x: T): T {\r\n    return x;\r\n}\r\n\r\nexport function indexOf<T>(arr: T[], val: T): number {\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        if (arr[i] === val) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function spliceOne<T>(arr: T[], index: number): void {\r\n    if (0 > index) {\r\n        return;\r\n    }\r\n    for (let i = index, j = index + 1; arr.length > j; ++i, ++j) {\r\n        arr[i] = arr[j];\r\n    }\r\n    arr.pop();\r\n}\r\n\r\nexport function map<T, U>(arr: T[], iteratee: (val: T) => U): U[] {\r\n    const result: U[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        result.push(iteratee(arr[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapObj<T extends { [key: string]: any }, U extends { [key: string]: any }>(obj: T, iteratee: <K1 extends keyof T, K2 extends keyof U>(val: T[K1]) => U[K2]): U {\r\n    const result: { [key: string]: any } = {};\r\n    for (let key in obj) {\r\n        result[key] = iteratee(obj[key]);\r\n    }\r\n    return result as U;\r\n}\r\n\r\nexport function isSobokuReporter(x: any): x is SobokuReporterClass<any> {\r\n    return typeof x === \"object\" && x instanceof SobokuReporterClass;\r\n}\r\n\r\nexport function isStateHolder(x: any): x is IStateHolder<any> {\r\n    return typeof x === \"object\"  && typeof x.s === \"function\";\r\n}\r\n\r\nexport function isDepends(x: any): x is Depends {\r\n    return isSobokuReporter(x) && has(x, \"depends\");\r\n}\r\n","import { Atom, IProgressable, State, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass StateClass<T> extends SobokuReporterClass<T> implements IProgressable<T> {\r\n\r\n    constructor(private state: T) {\r\n        super();\r\n    }\r\n\r\n    public next(val: T): T {\r\n        this.state = val;\r\n        return super.next(val);\r\n    }\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nclass StateHolderClass<T> implements IStateHolder<T> {\r\n\r\n    constructor(private readonly state: T) {}\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nexport function state<T>(initial: T): State<T> {\r\n    return new StateClass(initial);\r\n}\r\n\r\nexport function convAtomToStateHolder<T>(atom: Atom<T>): IStateHolder<T> {\r\n    if (u.isStateHolder(atom)) {\r\n        return atom;\r\n    }\r\n    return new StateHolderClass(atom);\r\n}\r\n","import { Atom, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\nexport type Depends = { readonly depends: SobokuReporterClass<any>[] };\r\n\r\nexport function getDeps(atoms: Atom<any>[]): SobokuReporterClass<any>[] {\r\n    let result: SobokuReporterClass<any>[] = [];\r\n    for (let i = 0; atoms.length > i; ++i) {\r\n        const atom = atoms[i];\r\n        if(u.isDepends(atom)) {\r\n            result = result.concat(atom.depends);\r\n        } else if (u.isSobokuReporter(atom)) {\r\n            result.push(atom);\r\n        }\r\n    }\r\n    return u.unique(result);\r\n}\r\n\r\nexport function getState<T>(sh: IStateHolder<T>): T {\r\n    return sh.s();\r\n}\r\n\r\nexport abstract class CalcClass<T> extends SobokuReporterClass<T> {\r\n    private readonly depends: SobokuReporterClass<any>[];\r\n\r\n    constructor(atoms: Atom<any>[]) {\r\n        super();\r\n        const depends = this.depends = getDeps(atoms);\r\n        const listener = this.listener;\r\n        for (let i = 0; depends.length > i; ++i) {\r\n            depends[i].report(listener, this);\r\n        }\r\n    }\r\n\r\n    public abstract s(): T;\r\n    public listener(val: T): void {\r\n        this.next(this.s());\r\n    };\r\n    \r\n}\r\n\r\nexport abstract class CalcFuncClass<T> extends CalcClass<T> {\r\n    private readonly func: (args: any[]) => T;\r\n    private readonly states: IStateHolder<any>[];\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms);\r\n        this.func = u.optimizeCB(func);\r\n        this.states = u.map(atoms, convAtomToStateHolder);\r\n    }\r\n\r\n    public s(): T {\r\n        const args = u.map(this.states, getState);\r\n        return this.func(args);\r\n    }\r\n\r\n}\r\n","import { Reporter, ISObservable } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nfunction isEqual(x: any, y: any): boolean {\r\n    return x === y;\r\n}\r\n\r\nclass SequenceEqualClass<T> extends SObservable<Reporter<T>, true> {\r\n    public readonly input = new SobokuReporterClass<T>();\r\n    private readonly compare: (x: any, y: any) => boolean;\r\n    private readonly sequence: T[];\r\n    private i = 0;\r\n\r\n    constructor(sequence: T[], compare = isEqual) {\r\n        super();\r\n        this.compare = compare;\r\n        this.sequence = sequence;\r\n        this.input.report(this.checkInput, this);\r\n    }\r\n\r\n    private checkInput(val: T): void {\r\n        const sequence = this.sequence;\r\n        if (this.compare(sequence[this.i], val) === false) {\r\n            this.i = 0;\r\n            return;\r\n        }\r\n        if (++this.i === sequence.length) {\r\n            this.i = 0;\r\n            this.output.next(true);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function sequenceEqual<T>(sequence: T[], compareFunc?: (x: T, y: T) => boolean) {\r\n    return new SequenceEqualClass(sequence, compareFunc);\r\n}","import { Listener, IReporter, IUnsubscriber, Reporter } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass UnListenerClass<T> implements IUnsubscriber {\r\n    private listeners: SobokuListenerClass<any>[] | null;\r\n    private listener: SobokuListenerClass<T> | null;\r\n    \r\n    constructor(listeners: SobokuListenerClass<any>[], listener: SobokuListenerClass<T>) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n    }\r\n\r\n    public unsubscribe() {\r\n        const listeners = this.listeners;\r\n        if (listeners === null) {\r\n            return;\r\n        }\r\n        const i = u.indexOf(listeners, this.listener);\r\n        u.spliceOne(listeners, i);\r\n        this.listeners = null;\r\n        this.listener = null;\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuListenerClass<T> {\r\n\r\n    constructor(private readonly listener: Listener<T>, private readonly thisArg?: any) {\r\n        if (typeof listener !== \"function\") {\r\n            throw new TypeError(\"'listener' must be a function\");\r\n        }\r\n    }\r\n\r\n    public gets(news: T) {\r\n        this.listener.call(this.thisArg, news);\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuReporterClass<T> implements IReporter<T> {\r\n    private readonly listeners: SobokuListenerClass<T>[] = [];\r\n\r\n    public next(val: T): T {\r\n        const listeners = this.listeners;\r\n        for (let i = 0; listeners.length > i; ++i)\r\n            listeners[i].gets(val);\r\n        return val;\r\n    }\r\n\r\n    public report(listener: Listener<T>, thisArg?: any): IUnsubscriber {\r\n        const _listener = new SobokuListenerClass(listener, thisArg);\r\n        this.listeners.push(_listener);\r\n        return new UnListenerClass(this.listeners, _listener);\r\n    }\r\n\r\n    public listenerCount(): number {\r\n        return this.listeners.length;\r\n    }\r\n\r\n}\r\n\r\nexport function reporter<T>(): Reporter<T> {\r\n    return new SobokuReporterClass();\r\n}\r\n","import { IReporter, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"./reporter\";\r\n\r\n\r\nclass GateClass<T> extends SobokuReporterClass<T> {\r\n\r\n    constructor(private readonly gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>) {\r\n        super();\r\n        reporter.report(this.listener, this);\r\n    }\r\n\r\n    private listener(val: T): void {\r\n        if (this.gatekeeper.s()) {\r\n            this.next(val);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function gate<T>(gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>): IReporter<T> {\r\n    return new GateClass(gatekeeper, reporter);\r\n}","import { ISArray } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nclass SobokuArrayClass<T> extends SobokuReporterClass<T[]> implements ISArray<T> {\r\n    private readonly array: T[] = [];\r\n\r\n    constructor(array?: T[]) {\r\n        super();\r\n        this.array = array || [];\r\n    }\r\n        \r\n    public s(): T[] {\r\n        return this.array;\r\n    }\r\n\r\n    public pop(): T | undefined {\r\n        const result = this.array.pop();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public push(): number {\r\n        const i = Array.prototype.push.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return i;\r\n    }\r\n\r\n    public reverse(): T[] {\r\n        this.array.reverse();\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public shift(): T | undefined {\r\n        const result = this.array.shift();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public sort(compareFn?: (a: T, b: T) => number): T[] {\r\n        this.array.sort(compareFn);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n    \r\n    public splice(): T[] {\r\n        Array.prototype.splice.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public unshift(): number {\r\n        const result = Array.prototype.unshift.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function sarray<T>(array?: T[]): ISArray<T> {\r\n    return new SobokuArrayClass<T>(array);\r\n}","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass, getState } from \"./calc\";\r\n\r\n\r\nclass CombineClass<T> extends CalcClass<T> {\r\n    private readonly shObj: { [K in keyof T]: IStateHolder<T[K]> };\r\n\r\n    constructor(atomObj: { [K in keyof T]: Atom<T[K]>}) {\r\n        const atoms: Atom<any>[] = [];\r\n        for (let key in atomObj) {\r\n            atoms.push(atomObj[key]);\r\n        }\r\n        super(atoms);\r\n        this.shObj = u.mapObj(atomObj, convAtomToStateHolder);\r\n    }\r\n\r\n    public s() {\r\n        return u.mapObj<{ [K in keyof T]: IStateHolder<T[K]> }, T>(this.shObj, getState);\r\n    }\r\n    \r\n}\r\n\r\nexport function combine<T>(atomObj: { [K in keyof T]: Atom<T[K]>}): Calc<T> {\r\n    return new CombineClass(atomObj);\r\n}\r\n","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass DependencyClass<T> extends CalcFuncClass<T> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => T) {\r\n        super(atoms, func);\r\n    }\r\n\r\n}\r\n\r\nexport function dependency<T>(func: (...args: any[]) => T, ...atoms: Atom<any>[]): Calc<T> {\r\n    return new DependencyClass(atoms, func);\r\n}","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\nimport { CalcFuncClass, getState } from \"./calc\";\r\n\r\n\r\nclass TriggerClass extends CalcFuncClass<boolean> {\r\n\r\n    constructor(atoms: Atom<any>[], func: (...args: any[]) => boolean) {\r\n        super(atoms, func);\r\n    }\r\n\r\n    public listener() {\r\n        const s = this.s();\r\n        if (s)\r\n            this.next(s);\r\n    }\r\n\r\n}\r\n\r\nexport function trigger(func: (...args: any[]) => boolean, ...atoms: Atom<any>[]): Calc<boolean> {\r\n    return new TriggerClass(atoms, func);\r\n}","import { Calc, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\n\r\n\r\nclass PublisherClass<T> extends SobokuReporterClass<T> implements IStateHolder<T> {\r\n\r\n    constructor(private readonly permition: Calc<boolean>, private readonly reporter: Calc<T>) {\r\n        super();\r\n        permition.report(this.permitionChanged, this);\r\n        reporter.report(this.publish, this);\r\n    }\r\n\r\n    public s(): T {\r\n        return this.reporter.s();\r\n    }\r\n    \r\n    private publish(val: T) {\r\n        if (this.permition.s())\r\n            this.next(val);\r\n    }\r\n\r\n    private permitionChanged(permition: boolean) {\r\n        if (permition)\r\n            this.next(this.reporter.s());\r\n    }\r\n    \r\n}\r\n\r\nexport function publisher<T>(permition: Calc<boolean>, reporter: Calc<T>): Calc<T> {\r\n    return new PublisherClass(permition, reporter);\r\n}\r\n","import { Reporter, ISObservable } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nexport abstract class SObservable<I extends Reporter<any>, O> implements ISObservable<I, O> {\r\n    public abstract readonly input: I;\r\n    public readonly output = new SobokuReporterClass<O>();\r\n}","import { ISObservable, Atom, Reporter, State, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder, state } from \"../state/state\";\r\nimport { SobokuListenerClass, SobokuReporterClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { SObservable } from \"./observable\";\r\n\r\n\r\nabstract class TimerObservable extends SObservable<State<boolean>, number> {\r\n    public readonly input = state(false);\r\n    protected readonly cb = () => this.output.next(Date.now());\r\n    protected readonly ms: IStateHolder<number>;\r\n    protected timer: NodeJS.Timer;\r\n    protected isRunning = false;\r\n\r\n    constructor(ms: Atom<number>) {\r\n        super();\r\n        const _ms = this.ms = convAtomToStateHolder(ms);\r\n        this.input.report(this.fireTimer, this);\r\n        if (u.isSobokuReporter(_ms))\r\n            _ms.report(this.msChanged, this);\r\n    }\r\n\r\n    private msChanged(ms: number) {\r\n        if (this.isRunning) {\r\n            this.fireTimer(false);\r\n            this.fireTimer(true, ms);\r\n        }\r\n    }\r\n\r\n    private fireTimer(trigger: boolean, ms?: number): void {\r\n        this.fire(trigger, ms || this.ms.s());\r\n        this.isRunning = trigger;\r\n    }\r\n\r\n    protected abstract fire(trigger: boolean, ms: number): void;\r\n\r\n}\r\n\r\nclass IntervalObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        if (trigger === false) {\r\n            clearInterval(this.timer);\r\n        } else if (this.isRunning === false) {\r\n            this.timer = setInterval(this.cb, ms);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass TimeoutObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        clearTimeout(this.timer);\r\n        if (trigger) {\r\n            this.timer = setTimeout(this.cb, ms);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function interval(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new IntervalObservable(ms);\r\n}\r\n\r\nexport function timeout(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new TimeoutObservable(ms);\r\n}\r\n"],"names":["func","length","args","apply","undefined","obj","key","Object","prototype","hasOwnProperty","call","arr","result","i","val","indexOf","push","index","j","pop","iteratee","x","SobokuReporterClass","s","isSobokuReporter","has","initial","StateClass","atom","u.isStateHolder","StateHolderClass","atoms","u.isDepends","concat","depends","u.isSobokuReporter","u.unique","sh","y","listeners","listener","this","UnListenerClass","u.spliceOne","u.indexOf","thisArg","TypeError","SobokuListenerClass","news","gets","_listener","state","_super","_this","__extends","next","gatekeeper","reporter","report","GateClass","array","SobokuArrayClass","Array","arguments","reverse","shift","compareFn","sort","splice","unshift","getDeps","CalcClass","u.optimizeCB","states","u.map","convAtomToStateHolder","CalcFuncClass","getState","atomObj","shObj","u.mapObj","CombineClass","TriggerClass","permition","permitionChanged","publish","PublisherClass","ms","output","Date","now","_ms","input","fireTimer","msChanged","TimerObservable","isRunning","trigger","fire","SObservable","IntervalObservable","clearInterval","timer","setInterval","cb","TimeoutObservable","clearTimeout","setTimeout","sequence","compare","checkInput","SequenceEqualClass","_i","DependencyClass","compareFunc"],"mappings":"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"}