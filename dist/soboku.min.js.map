{"version":3,"file":"soboku.min.js","sources":["../src/util.ts","../src/state/state.ts","../src/calc/calc.ts","../src/obsevable/sequenceEqual.ts","../src/reporter/reporter.ts","../src/reporter/gate.ts","../src/state/sarray.ts","../src/calc/combine.ts","../src/calc/editer.ts","../src/calc/trigger.ts","../src/calc/publisher.ts","../src/obsevable/observable.ts","../src/obsevable/timer.ts"],"sourcesContent":["import { IStateHolder } from \"../index.d\";\r\nimport { Depends } from \"./calc/calc\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter/reporter\";\r\n\r\n\r\nexport function optimizeCB<T>(func: (...args: any[]) => T): (args: any[]) => T {\r\n    switch (func.length) {\r\n        case 1:\r\n            return (args: any[]) => func(args[0])\r\n        case 2:\r\n            return (args: any[]) => func(args[0], args[1]);\r\n        case 3:\r\n            return (args: any[]) => func(args[0], args[1], args[2]);\r\n        case 4:\r\n            return (args: any[]) => func(args[0], args[1], args[2], args[3]);\r\n        default:\r\n            return (args: any[]) => func.apply(undefined, args);\r\n    }\r\n}\r\n\r\nexport function has(obj: object, key: string): boolean {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\n\r\nexport function unique<T>(arr: T[]): T[] {\r\n    const result: T[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        const val = arr[i];\r\n        if (indexOf(result, val) === -1) {\r\n            result.push(val);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function identity<T>(x: T): T {\r\n    return x;\r\n}\r\n\r\nexport function indexOf<T>(arr: T[], val: T): number {\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        if (arr[i] === val) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nexport function spliceOne<T>(arr: T[], index: number): void {\r\n    if (0 > index) {\r\n        return;\r\n    }\r\n    for (let i = index, j = index + 1; arr.length > j; ++i, ++j) {\r\n        arr[i] = arr[j];\r\n    }\r\n    arr.pop();\r\n}\r\n\r\nexport function map<T, U>(arr: T[], iteratee: (val: T) => U): U[] {\r\n    const result: U[] = [];\r\n    for (let i = 0; arr.length > i; ++i) {\r\n        result.push(iteratee(arr[i]));\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function mapObj<T extends { [key: string]: any }, U extends { [key: string]: any }>(obj: T, iteratee: <K1 extends keyof T, K2 extends keyof U>(val: T[K1]) => U[K2]): U {\r\n    const result: { [key: string]: any } = {};\r\n    for (let key in obj) {\r\n        result[key] = iteratee(obj[key]);\r\n    }\r\n    return result as U;\r\n}\r\n\r\nexport function isSobokuReporter(x: any): x is SobokuReporterClass<any> {\r\n    return typeof x === \"object\" && x instanceof SobokuReporterClass;\r\n}\r\n\r\nexport function isStateHolder(x: any): x is IStateHolder<any> {\r\n    return typeof x === \"object\"  && typeof x.s === \"function\";\r\n}\r\n\r\nexport function isDepends(x: any): x is Depends {\r\n    return isSobokuReporter(x) && has(x, \"depends\");\r\n}\r\n","import { Atom, IProgressable, State, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass StateClass<T> extends SobokuReporterClass<T> implements IProgressable<T> {\r\n\r\n    constructor(private state: T) {\r\n        super();\r\n    }\r\n\r\n    public next(val: T): T {\r\n        this.state = val;\r\n        return super.next(val);\r\n    }\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nclass StateHolderClass<T> implements IStateHolder<T> {\r\n\r\n    constructor(private readonly state: T) {}\r\n\r\n    public s() {\r\n        return this.state;\r\n    }\r\n    \r\n}\r\n\r\nexport function state<T>(initial: T): State<T> {\r\n    return new StateClass(initial);\r\n}\r\n\r\nexport function convAtomToStateHolder<T>(atom: Atom<T>): IStateHolder<T> {\r\n    if (u.isStateHolder(atom)) {\r\n        return atom;\r\n    }\r\n    return new StateHolderClass(atom);\r\n}\r\n","import { Atom, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\n\r\nexport type Depends = { readonly depends: SobokuReporterClass<any>[] };\r\n\r\nexport function getDeps(atoms: Atom<any>[]): SobokuReporterClass<any>[] {\r\n    let result: SobokuReporterClass<any>[] = [];\r\n    for (let i = 0; atoms.length > i; ++i) {\r\n        const atom = atoms[i];\r\n        if(u.isDepends(atom)) {\r\n            result = result.concat(atom.depends);\r\n        } else if (u.isSobokuReporter(atom)) {\r\n            result.push(atom);\r\n        }\r\n    }\r\n    return u.unique(result);\r\n}\r\n\r\nexport function getState<T>(sh: IStateHolder<T>): T {\r\n    return sh.s();\r\n}\r\n\r\nexport abstract class CalcClass<T> extends SobokuReporterClass<T> implements IStateHolder<T>, Depends {\r\n    public readonly depends: SobokuReporterClass<any>[] = [];\r\n\r\n    public abstract s(): T;\r\n\r\n    protected addDepends(atoms: Atom<any>[], listener: SobokuListenerClass<any>) {\r\n        const depends = getDeps(atoms);\r\n        for (let i = 0; depends.length > i; ++i) {\r\n            depends[i].report(listener);\r\n        }\r\n        this.depends.push.apply(this.depends, depends);\r\n    }\r\n\r\n    protected listener(val: T): void {\r\n        this.next(this.s());\r\n    };\r\n    \r\n}\r\n","import { Reporter, ISArray, ISObservable, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SObservableClass } from \"./observable\";\r\n\r\n\r\nfunction isEqual(x: any, y: any): boolean {\r\n    return x === y;\r\n}\r\n\r\nclass SequenceEqualClass<T> extends SObservableClass<Reporter<T>, true> {\r\n    public readonly input = new SobokuReporterClass<T>();\r\n    private readonly compare: (x: any, y: any) => boolean;\r\n    private readonly sequence: IStateHolder<T[]>;\r\n    private i = 0;\r\n\r\n    constructor(sequence: T[] | ISArray<T>, compare = isEqual) {\r\n        super();\r\n        this.compare = compare;\r\n        this.sequence =  convAtomToStateHolder(sequence);\r\n        this.input.report(new SobokuListenerClass(this.checkInput, this));\r\n    }\r\n\r\n    private checkInput(val: T): void {\r\n        const sequence = this.sequence.s();\r\n        if (this.compare(sequence[this.i], val) === false) {\r\n            this.i = 0;\r\n            return;\r\n        }\r\n        if (++this.i === sequence.length) {\r\n            this.i = 0;\r\n            this.output.next(true);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function sequenceEqual<T>(sequence: T[] | ISArray<T>, compareFunc?: (x: T, y: T) => boolean): ISObservable<Reporter<T>, true> {\r\n    return new SequenceEqualClass(sequence, compareFunc);\r\n}","import { Listener, IReporter, IListener, IUnsubscriber, Reporter } from \"../../index.d\";\r\nimport * as u from \"../util\";\r\n\r\n\r\nclass UnListenerClass<T> implements IUnsubscriber {\r\n    private listeners: SobokuListenerClass<any>[] | null;\r\n    private listener: SobokuListenerClass<T> | null;\r\n    \r\n    constructor(listeners: SobokuListenerClass<any>[], listener: SobokuListenerClass<T>) {\r\n        this.listeners = listeners;\r\n        this.listener = listener;\r\n    }\r\n\r\n    public unsubscribe() {\r\n        const listeners = this.listeners;\r\n        if (listeners === null) {\r\n            return;\r\n        }\r\n        const i = u.indexOf(listeners, this.listener);\r\n        u.spliceOne(listeners, i);\r\n        this.listeners = null;\r\n        this.listener = null;\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuListenerClass<T> implements IListener<T> {\r\n\r\n    constructor(private readonly listener: Listener<T>, private readonly thisArg?: any) {\r\n        if (typeof listener !== \"function\") {\r\n            throw new TypeError(\"'listener' must be a function\");\r\n        }\r\n    }\r\n\r\n    public read(news: T) {\r\n        this.listener.call(this.thisArg, news);\r\n    }\r\n    \r\n}\r\n\r\nexport class SobokuReporterClass<T> implements IReporter<T> {\r\n    private readonly listeners: SobokuListenerClass<T>[] = [];\r\n\r\n    public next(val: T): T {\r\n        const listeners = this.listeners;\r\n        for (let i = 0; listeners.length > i; ++i)\r\n            listeners[i].read(val);\r\n        return val;\r\n    }\r\n\r\n    public report(listener: Listener<T> | SobokuListenerClass<T>): IUnsubscriber {\r\n        const _listener = listener instanceof SobokuListenerClass\r\n            ? listener\r\n            : new SobokuListenerClass(listener);\r\n        this.listeners.push(_listener);\r\n        return new UnListenerClass(this.listeners, _listener);\r\n    }\r\n\r\n    public listenerCount(): number {\r\n        return this.listeners.length;\r\n    }\r\n\r\n}\r\n\r\nexport function reporter<T>(): Reporter<T> {\r\n    return new SobokuReporterClass();\r\n}\r\n\r\nexport function listener<T>(listener: Listener<T>, thisArg?: any): SobokuListenerClass<T> {\r\n    return new SobokuListenerClass(listener, thisArg);\r\n}\r\n","import { IReporter, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"./reporter\";\r\n\r\n\r\nclass GateClass<T> extends SobokuReporterClass<T> {\r\n\r\n    constructor(private readonly gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>) {\r\n        super();\r\n        reporter.report(new SobokuListenerClass(this.listener, this));\r\n    }\r\n\r\n    private listener(val: T): void {\r\n        if (this.gatekeeper.s()) {\r\n            this.next(val);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport function gate<T>(gatekeeper: IStateHolder<boolean>, reporter: IReporter<T>): IReporter<T> {\r\n    return new GateClass(gatekeeper, reporter);\r\n}","import { ISArray } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nclass SobokuArrayClass<T> extends SobokuReporterClass<T[]> implements ISArray<T> {\r\n    private readonly array: T[] = [];\r\n\r\n    constructor(array?: T[]) {\r\n        super();\r\n        this.array = array || [];\r\n    }\r\n        \r\n    public s(): T[] {\r\n        return this.array;\r\n    }\r\n\r\n    public pop(): T | undefined {\r\n        const result = this.array.pop();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public push(): number {\r\n        const i = Array.prototype.push.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return i;\r\n    }\r\n\r\n    public reverse(): T[] {\r\n        this.array.reverse();\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public shift(): T | undefined {\r\n        const result = this.array.shift();\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n    public sort(compareFn?: (a: T, b: T) => number): T[] {\r\n        this.array.sort(compareFn);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n    \r\n    public splice(): T[] {\r\n        Array.prototype.splice.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return this.array;\r\n    }\r\n\r\n    public unshift(): number {\r\n        const result = Array.prototype.unshift.apply(this.array, arguments);\r\n        this.next(this.array);\r\n        return result;\r\n    }\r\n\r\n}\r\n\r\nexport function sarray<T>(array?: T[]): ISArray<T> {\r\n    return new SobokuArrayClass<T>(array);\r\n}","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass, getState } from \"./calc\";\r\n\r\n\r\nclass CombineClass<T> extends CalcClass<T> {\r\n    private readonly shObj: { [K in keyof T]: IStateHolder<T[K]> };\r\n\r\n    constructor(atomObj: { [K in keyof T]: Atom<T[K]>}) {\r\n        super();\r\n        const atoms: Atom<any>[] = [];\r\n        for (let key in atomObj) {\r\n            atoms.push(atomObj[key]);\r\n        }\r\n        super.addDepends(atoms, new SobokuListenerClass(this.listener, this));\r\n        this.shObj = u.mapObj(atomObj, convAtomToStateHolder);\r\n    }\r\n\r\n    public s() {\r\n        return u.mapObj<{ [K in keyof T]: IStateHolder<T[K]> }, T>(this.shObj, getState);\r\n    }\r\n    \r\n}\r\n\r\nexport function combine<T>(atomObj: { [K in keyof T]: Atom<T[K]>}): Calc<T> {\r\n    return new CombineClass(atomObj);\r\n}\r\n","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder } from \"../state/state\";\r\nimport { SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass, getState } from \"./calc\";\r\n\r\n\r\nexport class EditerClass<T> extends CalcClass<T> {\r\n    private readonly func: (args: any[]) => T;\r\n    private readonly states: IStateHolder<any>[];\r\n\r\n    constructor(func: (...args: any[]) => T, atoms: Atom<any>[]) {\r\n        super();\r\n        this.func = u.optimizeCB(func);\r\n        this.states = u.map(atoms, convAtomToStateHolder);\r\n        super.addDepends(atoms, new SobokuListenerClass(this.listener, this));\r\n    }\r\n\r\n    public s(): T {\r\n        const args = u.map(this.states, getState);\r\n        return this.func(args);\r\n    }\r\n\r\n}\r\n\r\nexport function editer<T>(func: (...args: any[]) => T, atoms: Atom<any>[]): Calc<T> {\r\n    return new EditerClass(func, atoms);\r\n}","import { Atom, Calc, IStateHolder } from \"../../index.d\";\r\nimport { SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass } from \"./calc\";\r\n\r\n\r\nclass TriggerClass extends CalcClass<boolean> {\r\n\r\n    constructor(private readonly condition: Calc<boolean>) {\r\n        super();\r\n        const listener = new SobokuListenerClass(this.onConditionChanged, this);\r\n        super.addDepends([condition], listener);\r\n    }\r\n\r\n    private onConditionChanged() {\r\n        const s = this.s();\r\n        if (s)\r\n            this.next(s);\r\n    }\r\n\r\n    public s() {\r\n        return this.condition.s();\r\n    }\r\n\r\n}\r\n\r\nclass NTriggerClass extends TriggerClass {\r\n\r\n    public s() {\r\n        return !super.s()\r\n    }\r\n    \r\n}\r\n\r\nexport function trigger(condition: Calc<boolean>): Calc<boolean> {\r\n    return new TriggerClass(condition);\r\n}\r\n\r\nexport function ntrigger(condition: Calc<boolean>): Calc<boolean> {\r\n    return new NTriggerClass(condition);\r\n}\r\n","import { Calc, IStateHolder } from \"../../index.d\";\r\nimport { SobokuReporterClass, SobokuListenerClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { CalcClass } from \"./calc\";\r\n\r\n\r\nclass PublisherClass<T> extends CalcClass<T> {\r\n    private prevPermition: boolean;\r\n\r\n    constructor(private readonly permition: Calc<boolean>, private readonly reporter: Calc<T>) {\r\n        super();\r\n        this.prevPermition = permition.s();\r\n        super.addDepends([permition], new SobokuListenerClass(this.permitionChanged, this));\r\n        super.addDepends([reporter], new SobokuListenerClass(this.publish, this));\r\n    }\r\n\r\n    public s(): T {\r\n        return this.reporter.s();\r\n    }\r\n    \r\n    private publish() {\r\n        if (this.permition.s()) {\r\n            this.next(this.reporter.s());\r\n        }\r\n    }\r\n\r\n    private permitionChanged() {\r\n        const permition = this.permition.s();\r\n        if (permition && this.prevPermition === false) {\r\n            this.next(this.reporter.s());\r\n        }\r\n        this.prevPermition = permition;\r\n    }\r\n    \r\n}\r\n\r\nexport function publisher<T>(permition: Calc<boolean>, reporter: Calc<T>): Calc<T> {\r\n    return new PublisherClass(permition, reporter);\r\n}\r\n","import { Reporter, SObservable } from \"../../index.d\";\r\nimport { SobokuReporterClass } from \"../reporter/reporter\";\r\n\r\n\r\nexport abstract class SObservableClass<I extends Reporter<any>, O> implements SObservable<I, O> {\r\n    public abstract readonly input: I;\r\n    public readonly output = new SobokuReporterClass<O>();\r\n}","import { Atom, Reporter, State, ISObservable, IStateHolder } from \"../../index.d\";\r\nimport { convAtomToStateHolder, state } from \"../state/state\";\r\nimport { SobokuListenerClass, SobokuReporterClass } from \"../reporter/reporter\";\r\nimport * as u from \"../util\";\r\nimport { SObservableClass } from \"./observable\";\r\n\r\n\r\nabstract class TimerObservable extends SObservableClass<State<boolean>, number> {\r\n    public readonly input = state(false);\r\n    protected readonly cb = () => this.output.next(Date.now());\r\n    protected readonly ms: IStateHolder<number>;\r\n    protected timer: NodeJS.Timer;\r\n    protected isRunning = false;\r\n\r\n    constructor(ms: Atom<number>) {\r\n        super();\r\n        const _ms = this.ms = convAtomToStateHolder(ms);\r\n        this.input.report(new SobokuListenerClass(this.fireTimer, this));\r\n        if (u.isSobokuReporter(_ms))\r\n            _ms.report(new SobokuListenerClass(this.msChanged, this));\r\n    }\r\n\r\n    private msChanged(ms: number) {\r\n        if (this.isRunning) {\r\n            this.fireTimer(false);\r\n            this.fireTimer(true, ms);\r\n        }\r\n    }\r\n\r\n    private fireTimer(trigger: boolean, ms?: number): void {\r\n        this.fire(trigger, ms || this.ms.s());\r\n        this.isRunning = trigger;\r\n    }\r\n\r\n    protected abstract fire(trigger: boolean, ms: number): void;\r\n\r\n}\r\n\r\nclass IntervalObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        if (trigger === false) {\r\n            clearInterval(this.timer);\r\n        } else if (this.isRunning === false) {\r\n            this.timer = setInterval(this.cb, ms);\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nclass TimeoutObservable extends TimerObservable {\r\n\r\n    protected fire(trigger: boolean, ms: number) {\r\n        clearTimeout(this.timer);\r\n        if (trigger) {\r\n            this.timer = setTimeout(this.cb, ms);\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport function interval(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new IntervalObservable(ms);\r\n}\r\n\r\nexport function timeout(ms: Atom<number>): ISObservable<State<boolean>, number> {\r\n    return new TimeoutObservable(ms);\r\n}\r\n"],"names":["func","length","args","apply","undefined","obj","key","Object","prototype","hasOwnProperty","call","arr","result","i","val","indexOf","push","index","j","pop","iteratee","x","SobokuReporterClass","s","isSobokuReporter","has","initial","StateClass","atom","u.isStateHolder","StateHolderClass","atoms","u.isDepends","concat","depends","u.isSobokuReporter","u.unique","sh","y","listeners","listener","this","UnListenerClass","u.spliceOne","u.indexOf","thisArg","TypeError","SobokuListenerClass","news","read","_listener","state","_super","_this","__extends","next","gatekeeper","reporter","report","GateClass","array","SobokuArrayClass","Array","arguments","reverse","shift","compareFn","sort","splice","unshift","CalcClass","getDeps","atomObj","addDepends","shObj","u.mapObj","convAtomToStateHolder","CombineClass","getState","u.optimizeCB","states","u.map","EditerClass","condition","onConditionChanged","TriggerClass","NTriggerClass","permition","prevPermition","permitionChanged","publish","PublisherClass","ms","output","Date","now","_ms","input","fireTimer","msChanged","TimerObservable","isRunning","trigger","fire","SObservableClass","IntervalObservable","clearInterval","timer","setInterval","cb","TimeoutObservable","clearTimeout","setTimeout","sequence","compare","checkInput","SequenceEqualClass","compareFunc"],"mappings":"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"}